proc BENNETT(X)
  (R.call DIV(X)) <= call DUP(call DIV(X));
  return (R.X);  (* A pair of the original output R and the original input X *)

proc DIV(X)
  from =? Y nil loop
    (nil.(nil.X)) <= X;
    Y <= (nil.Y);
  until || (=? X nil) (=? X (nil.nil));
  return (Y.X);

proc DUP(X)
  Y ^= X;
  return (X.Y)